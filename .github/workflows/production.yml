name: 'cassler ci'
on:
  push:
  pull_request:
    types: [ opened, reopened ]
jobs:
  unit-test:
    strategy:
      matrix:
        go-version: [1.15.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:

      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/checkout@v1

      - name: Install dependencies
        run: go get -u 

      - name: Test
        run: go test -v

  build-docker-artifacts:
    needs: [ unit-test ]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'main')
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: '1.15.x'

      - uses: actions/checkout@v1

      - name: Docker Build
        run: docker build -t cassler:latest .

      - name: Docker Tag
        run: docker tag cassler:latest fidelissauro/cassler:latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD}}

      - name: Docker Push
        run: docker push fidelissauro/cassler:latest

  # release-linux-386:
  #   needs: [ unit-test ]
  #   name: release linux/386
  #   runs-on: ubuntu-latest
  #   if: contains(github.ref, 'main')
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: install go tools
  #     run: curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sudo sh -s -- -b /usr/local/bin/ "v0.122.0"
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: "386"
  #       GOOS: linux
  #       EXTRA_FILES: "LICENSE"
  release-linux-amd64:
    needs: [ unit-test ]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # release-darwin-amd64:
  #   needs: [ unit-test ]  
  #   name: release darwin/amd64
  #   runs-on: ubuntu-latest
  #   if: contains(github.ref, 'main')
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: amd64
  #       GOOS: darwin
  #       EXTRA_FILES: "LICENSE"
  # release-windows-amd64:
  #   needs: [ unit-test ]  
  #   name: release windows/amd64
  #   runs-on: ubuntu-latest
  #   if: contains(github.ref, 'main')
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: compile and release
  #     uses: ngs/go-release.action@v1.0.1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       GOARCH: amd64
  #       GOOS: windows
  #       EXTRA_FILES: "LICENSE"